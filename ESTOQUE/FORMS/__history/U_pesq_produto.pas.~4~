unit U_pesq_produto;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, U_form_pesquisa_padrao, Data.DB,
  FireDAC.Stan.Intf, FireDAC.Stan.Option, FireDAC.Stan.Param,
  FireDAC.Stan.Error, FireDAC.DatS, FireDAC.Phys.Intf, FireDAC.DApt.Intf,
  FireDAC.Stan.Async, FireDAC.DApt, FireDAC.Comp.DataSet, FireDAC.Comp.Client,
  Vcl.Grids, Vcl.DBGrids, Vcl.StdCtrls, Vcl.Buttons, Vcl.Mask, Vcl.ExtCtrls;

type
  TFrm_pesq_produto = class(TFrm_pesquisa_padrao)
    Q_pesq_padraoID_PRODUTO: TIntegerField;
    Q_pesq_padraoPRODUTO_DESCRICAO: TStringField;
    Q_pesq_padraoVL_CUSTO: TFMTBCDField;
    Q_pesq_padraoVL_VENDA: TFMTBCDField;
    Q_pesq_padraoESTOQUE: TFMTBCDField;
    Q_pesq_padraoESTOQUE_MIN: TFMTBCDField;
    Q_pesq_padraoUNIDADE: TStringField;
    Q_pesq_padraoID_FORNECEDOR: TIntegerField;
    Q_pesq_padraoNOME: TStringField;
    Q_pesq_padraoCADASTRO: TDateField;
    procedure btn_pesquisarClick(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  Frm_pesq_produto: TFrm_pesq_produto;

implementation

{$R *.dfm}

procedure TFrm_pesq_produto.btn_pesquisarClick(Sender: TObject);
begin
  Q_pesq_padrao.Close;
  Q_pesq_padrao.SQL.Add('');
  Q_pesq_padrao.Params.Clear;
  Q_pesq_padrao.SQL.Clear;
  Q_pesq_padrao.SQL.Add('SELECT A.ID_PRODUTO,A.PRODUTO_DESCRICAO,A.VL_CUSTO,'
  + 'A.VL_VENDA,A.ESTOQUE,A.ESTOQUE_MIN,A.UNIDADE,A.ID_FORNECEDOR,B.NOME,A.CADASTRO'
  + 'FROM PRODUTO A INNER JOIN FORNECEDOR B ON B.ID_FORNECEDOR = A.ID_FORNECEDOR;');

  case cb_chave_pesquisa.ItemIndex of
    0:begin  //pesquisa por código
      Q_pesq_padrao.SQL.Add('WHERE A.ID_PRODUTO = :PID_PRODUTO');
      Q_pesq_padrao.ParamByName('PID_PRODUTO').asString := ed_nome.Text;
    end;

    1:begin  //pesquisa por nome
      Q_pesq_padrao.SQL.Add('WHERE A.PRODUTO_DESCRICAO LIKE :PDESCRICAO');
      Q_pesq_padrao.ParamByName('PDESCRICAO').asString := '%' +ed_nome.Text + '%';
    end;

    2:begin  //pesquisa por data
      Q_pesq_padrao.SQL.Add('WHERE A.CADASTRO = :PCADASTRO');
      Q_pesq_padrao.ParamByName('PCADASTRO') .AsDate := StrToDate(mk_inicio.Text);
    end;

    3:begin //pesquisa por período
      Q_pesq_padrao.SQL.Add('WHERE A.CADASTRO BETWEEN :PINICIO AND :PFIM');
      Q_pesq_padrao.ParamByName('PINICIO') .AsDate := StrToDate(mk_inicio.Text);
      Q_pesq_padrao.ParamByName('PFIM') .AsDate := StrToDate(mk_fim.Text);
    end;

    4:begin
      Q_pesq_padrao.SQL.Add('ORDER BY A.ID_PRODUTO');
    end;

    5:begin
      Q_pesq_padrao.SQL.Add('WHERE B.ID_FORNECEDOR = :PID_FORNECEDOR');
      Q_pesq_padrao.ParamByName('PID_FORNECEDOR').asString := ed_nome.Text;
    end;

  end;
  Q_pesq_padrao.Open;

  if Q_pesq_padrao.IsEmpty then
  begin
    Messagedlg('Registro não encontrado.',mtInformation, [mbOk],0);
  end
  else
  abort;

end;


end.
